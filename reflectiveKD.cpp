#include "ExploitFunctions.hpp"
#include "ProcessInit.hpp"
#include "Console.hpp"
#include "XorStr.hpp"
#include "LoadLibrary.hpp"
#include "HasherLibrary.hpp"


#include <Windows.h>
#include <iostream>
using namespace std::chrono_literals;

class ProcessOpen
{
public:
    std::unique_ptr<ProcessInit> processInit;
    bool processInitCheck = false;
};
inline ProcessOpen PO;


BOOL WINAPI CtrlHandler(DWORD CEvent)
{
    if (CEvent == CTRL_C_EVENT) 
    {
        system("CLS");
        PO.processInit.reset();
        Exploit::KDMapper.libLoader.reset();
        Exploit::KDMapper.KernelImplant.reset();
        Exploit::KDMapper.hookInfo.reset();
        Exploit::KDMapper.libCall.reset();
        Exploit::KDMapper.mapInfo.reset();
        Exploit::KDMapper.safetyChecks.reset();
        dye.~DYE();
        _exit(0x0);
       
    }

    return FALSE;
}




int main()
{
    
    std::cout << dye.purple << R"(###                #####                                     
 #   ####  ###### #     #  ####    ##   #      ###### #####  
 #  #    # #      #       #    #  #  #  #      #      #    # 
 #  #      #####  #       #    # #    # #      #####  #    # 
 #  #      #      #       #    # ###### #      #      #    # 
 #  #    # #      #     # #    # #    # #      #      #    # 
###  ####  ######  #####   ####  #    # ###### ###### #####  )" << dye.reset << "\n";

    std::cout << "\n";
    std::cout << "\n";
    std::cout << "\n";

    
    
    PO.processInit = std::make_unique<ProcessInit>(&PO.processInitCheck);
    if (!PO.processInitCheck)
    {
        CPrint(xorstr_("Main"), xorstr_("Closing Application Due To Error"))
        PO.processInit.reset();
        return -1;
    }
    
    std::this_thread::sleep_for(3000ms);
    system("CLS");
    
    Exploit::KDMapper.RunDriverMap();

    CPrint(xorstr_("Main"), xorstr_("Press Control + C To Clear All Resources and Close Application"))

    SetConsoleCtrlHandler((PHANDLER_ROUTINE)CtrlHandler, TRUE);
    while (true){}
    return 0;
}
    

